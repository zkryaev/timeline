services:
    postgres:
      container_name: postgres
      image: postgres:17.4
      environment:
        POSTGRES_USER: ${DB_USER}
        POSTGRES_PASSWORD: ${DB_PASSWD}
        POSTGRES_DB: ${DB_NAME}
      ports:
        - "${DB_PORT}:5432"         
      #volumes:
      #  - ./db_init_user/:/docker-entrypoint-initdb.d/ 
      # - pgdata:/var/lib/postgresql/data
      networks:
        - default
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -h localhost -p ${DB_PORT} -U ${DB_USER}"]
        interval: 10s        
        timeout: 5s          
        retries: 5
    minio:
      image: minio/minio:latest
      container_name: minio
      command: server /data --console-address ":9001"
      ports:
        - "${S3_DATA_PORT}:${S3_DATA_PORT}" # Порт для доступа к API MinIO
        - "${S3_CONSOLE_PORT}:${S3_CONSOLE_PORT}" # Порт для веб-интерфейса MinIO Console
      environment:
        MINIO_ROOT_USER: ${S3_ROOT_USER}
        MINIO_ROOT_PASSWORD: ${S3_ROOT_PASSWORD}
        MINIO_CACHE_EXPIRY: ${MINIO_CACHE_TTL}
        MINIO_USE_SSL: ${S3_SSLMODE}
        MINIO_DEFAULT_BUCKETS: ${S3_DEFAULT_BUCKET}
        MINIO_CACHE: /mnt/minio_cache
      #volumes:
        #- minio_data:/data
        #- minio_config:/root/.minio
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
        interval: 30s
        timeout: 20s
        retries: 3
#volumes:
#  pgdata:
#  minio_data:
#  minio_config:
#  minio_cache:

networks:
  default:
    driver: bridge
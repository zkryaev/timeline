services:
    postgres_master:
      container_name: postgres_master
      image: postgres:17.4
      environment:
        POSTGRES_DB: ${DB_NAME}
        POSTGRES_USER: ${DB_USER}
        POSTGRES_PASSWORD: ${DB_PASSWD}
      ports:
        - "${DB_PORT}:5432"         
      #volumes:
      #  - ./db_init_user/:/docker-entrypoint-initdb.d/ 
      # - pgdata:/var/lib/postgresql/data
      networks:
        - default
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -h localhost -p ${DB_PORT} -U ${DB_USER} -d ${DB_NAME}"]
        start_period: 20s
        interval: 30s        
        timeout: 5s          
        retries: 5

    minio:
      image: minio/minio:latest
      container_name: minio
      command: server /data --console-address ":${S3_CONSOLE_PORT}"
      ports:
        - "${S3_DATA_PORT}:${S3_DATA_PORT}" # Порт для доступа к API MinIO
        - "${S3_CONSOLE_PORT}:${S3_CONSOLE_PORT}" # Порт для веб-интерфейса MinIO Console
      environment:
        MINIO_ROOT_USER: ${S3_ROOT_USER}
        MINIO_ROOT_PASSWORD: ${S3_ROOT_PASSWORD}
        MINIO_CACHE_EXPIRY: ${MINIO_CACHE_TTL}
        MINIO_USE_SSL: ${S3_SSLMODE}
        MINIO_DEFAULT_BUCKETS: ${S3_DEFAULT_BUCKET}
        MINIO_CACHE: /mnt/minio_cache
      networks:
        - default
      #volumes:
        #- minio_data:/data
        #- minio_config:/root/.minio
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:${S3_DATA_PORT}/minio/health/live"]
        start_period: 20s
        interval: 30s        
        timeout: 5s          
        retries: 5

    prometheus:
      container_name: prometheus
      image: prom/prometheus:latest
      ports:
        - "${PROMETHEUS_PORT}:9090"
      extra_hosts:
      - "host.docker.internal:host-gateway"
      volumes:
        - ./prometheus.yml:/etc/prometheus/prometheus.yml
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'

    grafana:
      container_name: grafana
      image: grafana/grafana:latest
      ports:
        - "${GRAFANA_PORT}:3000"
      volumes:
        - grafana_data:/var/lib/grafana
      environment:
        - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWD}
      depends_on:
        - prometheus

    # analytics_app:
    #   image: petrgrachev/timeline-analytics:1.0.3
    #   container_name: analytic_app
    #   depends_on:
    #     - postgres_master
    #     - analytics_db
    #   environment:
    #     # Переменные приложения
    #     APP_PORT: ${ANALYTICS_PORT}
    #     # Переменные для master БД
    #     MAIN_DB_NAME: ${DB_NAME}
    #     MAIN_DB_USER: ${DB_USER}
    #     MAIN_DB_PASSWORD: ${DB_PASSWD}
    #     MAIN_DB_CONTAINER: postgres_master
    #     MAIN_DB_PORT: ${DB_PORT}
    #     # Переменные для аналитической БД
    #     ANALYTICS_DB_CONTAINER: analytics_db
    #     ANALYTICS_DB_NAME: ${ANALYTICS_DB_NAME}
    #     ANALYTICS_DB_USER: ${ANALYTICS_DB_USER}
    #     ANALYTICS_DB_PASSWORD: ${ANALYTICS_DB_PASSWD}
    #     ANALYTICS_DB_PORT: 5432
    #   ports:
    #     - "${ANALYTICS_PORT}:${ANALYTICS_PORT}"
    #   networks:
    #     - default
    #   healthcheck:
    #     test: ["CMD", "curl", "-f", "http://localhost:${ANALYTICS_PORT}/analytics/health"]
    #     start_period: 20s
    #     interval: 30s        
    #     timeout: 5s          
    #     retries: 5

    # analytics_db:
    #   image: postgres:17.4
    #   container_name: analytics_db
    #   environment:
    #     POSTGRES_DB: ${ANALYTICS_DB_NAME}
    #     POSTGRES_USER: ${ANALYTICS_DB_USER}
    #     POSTGRES_PASSWORD: ${ANALYTICS_DB_PASSWD}
    #   ports:
    #     - "${ANALYTICS_DB_PORT}:5432"
    #   #volumes:
    #   #  - pgdata_analytics:/var/lib/postgresql/data
    #   #  - ./:/migrations-initdb.d
    #   networks:
    #     - default
    #   healthcheck:
    #     test: ["CMD-SHELL", "pg_isready -h localhost -p 5432 -U ${ANALYTICS_DB_USER} -d ${ANALYTICS_DB_NAME}"]
    #     start_period: 20s
    #     interval: 30s        
    #     timeout: 5s          
    #     retries: 5

volumes:
  grafana_data:
#  pgdata:
#  minio_data:
#  minio_config:
#  minio_cache:

networks:
  default:
    driver: bridge